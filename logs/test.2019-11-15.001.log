2019/11/14 10:20:06.110 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 10:20:06.111 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 10:20:06.111 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:20:06.963 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:20:06.964 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 10:20:06.964 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 10:20:06.964 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 10:20:06.965 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 10:20:06.965 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 10:20:06.965 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 10:20:06.966 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:20:07.550 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:20:07.550 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 10:20:07.550 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 10:20:07.550 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 10:20:07.551 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 10:20:07.551 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 10:20:07.551 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 10:20:07.551 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:20:08.319 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:20:08.319 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 10:20:08.319 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:20:08.319 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 10:20:08.319 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 10:20:08.319 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:20:08.940 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:20:08.949 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 10:20:08.949 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:20:08.949 [D] [scanner.go:67]  [8] 	Age int8 // 年龄
2019/11/14 10:20:08.949 [D] [scanner.go:84]  读取字段：	Age int8 // 年龄
2019/11/14 10:20:08.949 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:20:09.539 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:20:09.539 [D] [scanner.go:67]  [9] }
2019/11/14 10:20:09.540 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:20:10.106 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:20:10.116 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:20:10.689 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:20:10.806 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 10:21:16.332 [D] [user_service.go:21]  domains.User
2019/11/14 10:21:16.332 [D] [user_service.go:21]  这还没有结束
2019/11/14 10:21:16.333 [D] [user_controller.go:34]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male -106}
2019/11/14 10:21:16.334 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|  47.3463678s|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 10:22:29.271 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 10:22:29.271 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 10:22:29.271 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:22:29.827 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:22:29.827 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 10:22:29.828 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 10:22:29.828 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 10:22:29.828 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 10:22:29.828 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 10:22:29.828 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 10:22:29.828 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:22:30.381 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:22:30.382 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 10:22:30.382 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 10:22:30.382 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 10:22:30.382 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 10:22:30.382 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 10:22:30.382 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 10:22:30.382 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:22:30.948 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:22:30.948 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 10:22:30.948 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:22:30.948 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 10:22:30.948 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 10:22:30.948 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:22:31.518 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:22:31.519 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 10:22:31.519 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:22:31.519 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 10:22:31.519 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 10:22:31.519 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:22:32.095 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:22:32.095 [D] [scanner.go:67]  [9] }
2019/11/14 10:22:32.095 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:22:32.663 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:22:32.673 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:22:33.223 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:22:33.331 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 10:24:03.231 [D] [user_service.go:21]  domains.User
2019/11/14 10:24:48.748 [D] [user_service.go:21]  这还没有结束
2019/11/14 10:24:48.749 [D] [user_controller.go:34]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 10:24:48.749 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m| 2m9.9324774s|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 10:26:19.214 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 10:26:19.214 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 10:26:19.214 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:26:19.786 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:26:19.786 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 10:26:19.786 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 10:26:19.786 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 10:26:19.787 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 10:26:19.787 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 10:26:19.787 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 10:26:19.787 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:26:20.356 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:26:20.356 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 10:26:20.357 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 10:26:20.357 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 10:26:20.357 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 10:26:20.357 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 10:26:20.357 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 10:26:20.357 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:26:20.928 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:26:20.929 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 10:26:20.929 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:26:20.929 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 10:26:20.929 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 10:26:20.929 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:26:21.507 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:26:21.516 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 10:26:21.516 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:26:21.516 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 10:26:21.516 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 10:26:21.516 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:26:22.095 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:26:22.095 [D] [scanner.go:67]  [9] }
2019/11/14 10:26:22.095 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:26:22.686 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:26:22.695 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:26:23.261 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:26:23.370 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 10:28:09.916 [D] [user_service.go:21]  domains.User
2019/11/14 10:28:18.904 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 10:28:33.292 [D] [user_service.go:21]  这还没有结束
2019/11/14 10:28:34.610 [D] [user_controller.go:34]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 10:28:34.610 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|  27.3737827s|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 10:35:08.442 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 10:35:08.442 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 10:35:08.442 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:35:09.001 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:35:09.001 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 10:35:09.001 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 10:35:09.001 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 10:35:09.002 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 10:35:09.002 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 10:35:09.002 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 10:35:09.002 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:35:09.567 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:35:09.567 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 10:35:09.567 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 10:35:09.567 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 10:35:09.567 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 10:35:09.567 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 10:35:09.567 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 10:35:09.567 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:35:10.162 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:35:10.171 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 10:35:10.171 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:35:10.171 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 10:35:10.171 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 10:35:10.171 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:35:10.749 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:35:10.750 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 10:35:10.750 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:35:10.750 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 10:35:10.750 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 10:35:10.750 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:35:11.324 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:35:11.333 [D] [scanner.go:67]  [9] }
2019/11/14 10:35:11.334 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:35:11.903 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:35:11.912 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:35:12.470 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:35:12.594 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 10:37:45.083 [D] [user_service.go:21]  domains.User
2019/11/14 10:37:45.658 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 10:37:45.659 [D] [user_service.go:21]  BaseDocument: domains.BaseDocument = {ObjectIdHex("5dbbb3789f784d1af2521092") 0 0}

2019/11/14 10:37:45.659 [D] [user_service.go:21]  Name: string = Falma

2019/11/14 10:37:45.659 [D] [user_service.go:21]  Sex: string = Male

2019/11/14 10:37:45.659 [D] [user_service.go:21]  Age: int16 = 150

2019/11/14 10:37:45.659 [D] [user_service.go:21]  这还没有结束
2019/11/14 10:37:45.659 [D] [user_controller.go:34]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 10:37:45.659 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|  18.6451311s|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 10:50:45.211 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 10:50:45.211 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 10:50:45.211 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:50:45.767 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:50:45.767 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 10:50:45.767 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 10:50:45.768 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 10:50:45.768 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 10:50:45.768 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 10:50:45.768 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 10:50:45.768 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:50:46.335 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:50:46.335 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 10:50:46.336 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 10:50:46.336 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 10:50:46.336 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 10:50:46.336 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 10:50:46.336 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 10:50:46.336 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:50:46.895 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:50:46.896 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 10:50:46.896 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:50:46.896 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 10:50:46.896 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 10:50:46.896 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:50:47.464 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:50:47.474 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 10:50:47.474 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:50:47.474 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 10:50:47.474 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 10:50:47.474 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:50:48.052 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:50:48.053 [D] [scanner.go:67]  [9] }
2019/11/14 10:50:48.053 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:50:48.613 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:50:48.622 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:50:49.169 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:50:49.291 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 10:50:55.125 [D] [user_service.go:21]  domains.User
2019/11/14 10:50:55.125 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 10:50:55.125 [D] [user_service.go:21]  BaseDocument: domains.BaseDocument = {ObjectIdHex("5dbbb3789f784d1af2521092") 0 0}

2019/11/14 10:50:55.126 [D] [user_service.go:21]  Name: string = Falma

2019/11/14 10:50:55.126 [D] [user_service.go:21]  Sex: string = Male

2019/11/14 10:50:55.126 [D] [user_service.go:21]  Age: int16 = 150

2019/11/14 10:50:55.126 [D] [user_service.go:21]  这还没有结束
2019/11/14 10:50:55.126 [D] [user_controller.go:34]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 10:50:55.126 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|    2.777573s|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 10:51:21.606 [D] [user_service.go:21]  domains.User
2019/11/14 10:51:21.606 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 10:53:44.449 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 10:53:44.449 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 10:53:44.449 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:53:44.997 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:53:44.997 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 10:53:44.997 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 10:53:44.997 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 10:53:44.998 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 10:53:44.998 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 10:53:44.998 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 10:53:44.998 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:53:45.562 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:53:45.562 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 10:53:45.562 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 10:53:45.562 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 10:53:45.562 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 10:53:45.562 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 10:53:45.562 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 10:53:45.562 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:53:46.132 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:53:46.141 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 10:53:46.141 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:53:46.141 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 10:53:46.141 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 10:53:46.141 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:53:46.706 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:53:46.716 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 10:53:46.716 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:53:46.716 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 10:53:46.716 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 10:53:46.716 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:53:47.297 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:53:47.306 [D] [scanner.go:67]  [9] }
2019/11/14 10:53:47.306 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:53:47.856 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:53:47.856 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:53:48.415 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:53:48.524 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 10:55:02.085 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 10:55:02.085 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 10:55:02.085 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:02.641 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:02.641 [I] [hooks.go:37]  开始扫描 domains
2019/11/14 10:55:02.641 [I] [hooks.go:37]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 10:55:02.641 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 10:55:02.641 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 10:55:02.641 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 10:55:02.641 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 10:55:02.641 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:03.192 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:03.192 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 10:55:03.193 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 10:55:03.193 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 10:55:03.193 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 10:55:03.193 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 10:55:03.193 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 10:55:03.193 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:03.757 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:03.757 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 10:55:03.757 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:55:03.757 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 10:55:03.757 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 10:55:03.757 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:04.320 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:04.320 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 10:55:04.320 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:55:04.320 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 10:55:04.320 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 10:55:04.320 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:04.885 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:04.894 [D] [scanner.go:67]  [9] }
2019/11/14 10:55:04.894 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:05.455 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:05.464 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:06.035 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:06.142 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 10:55:23.089 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 10:55:23.089 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 10:55:23.089 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:23.626 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:23.626 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 10:55:23.626 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 10:55:23.626 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 10:55:23.626 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 10:55:23.626 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 10:55:23.626 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 10:55:23.626 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:24.154 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:24.154 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 10:55:24.154 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 10:55:24.154 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 10:55:24.154 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 10:55:24.154 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 10:55:24.154 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 10:55:24.154 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:24.695 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:24.704 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 10:55:24.704 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:55:24.704 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 10:55:24.704 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 10:55:24.704 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:25.244 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:25.244 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 10:55:25.244 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 10:55:25.244 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 10:55:25.245 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 10:55:25.245 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:25.785 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:25.794 [D] [scanner.go:67]  [9] }
2019/11/14 10:55:25.794 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:26.329 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:26.338 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 10:55:26.875 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 10:55:26.984 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 10:55:43.920 [D] [user_service.go:21]  domains.User
2019/11/14 10:55:43.920 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 10:55:50.061 [D] [user_service.go:21]  BaseDocument找到了
2019/11/14 10:56:07.931 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 10:56:07.931 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.Elem on struct Value
2019/11/14 10:56:07.931 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 10:56:07.931 [C] [panic.go:679]  C:/Go/src/reflect/value.go:830
2019/11/14 10:56:07.931 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:41
2019/11/14 10:56:07.931 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 10:56:07.932 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 10:56:07.935 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 10:56:07.935 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 10:56:07.935 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 10:56:07.935 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 10:56:07.935 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 10:56:07.935 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 10:56:07.936 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:00:22.730 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:00:22.730 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:00:22.730 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:00:23.289 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:00:23.289 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:00:23.289 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:00:23.289 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:00:23.289 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:00:23.289 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:00:23.289 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:00:23.289 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:00:23.832 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:00:23.832 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:00:23.832 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:00:23.832 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:00:23.832 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:00:23.832 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:00:23.832 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:00:23.832 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:00:24.410 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:00:24.420 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:00:24.420 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:00:24.420 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:00:24.420 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:00:24.420 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:00:25.007 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:00:25.007 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:00:25.007 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:00:25.007 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:00:25.007 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:00:25.007 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:00:25.581 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:00:25.581 [D] [scanner.go:67]  [9] }
2019/11/14 11:00:25.582 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:00:26.149 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:00:26.149 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:00:26.716 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:00:26.837 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:00:30.517 [D] [user_service.go:21]  domains.User
2019/11/14 11:00:30.518 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 11:00:34.333 [D] [user_service.go:21]  BaseDocument找到了
2019/11/14 11:00:38.041 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:00:38.041 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.Elem on struct Value
2019/11/14 11:00:38.042 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:00:38.042 [C] [panic.go:679]  C:/Go/src/reflect/value.go:830
2019/11/14 11:00:38.042 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:41
2019/11/14 11:00:38.042 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:00:38.042 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:00:38.042 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:00:38.042 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:00:38.042 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:00:38.042 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:00:38.042 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:00:38.042 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:00:38.042 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:03:33.707 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:03:33.707 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:03:33.707 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:03:34.266 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:03:34.266 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:03:34.266 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:03:34.267 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:03:34.267 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:03:34.267 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:03:34.267 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:03:34.267 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:03:34.837 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:03:34.838 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:03:34.838 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:03:34.838 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:03:34.838 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:03:34.838 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:03:34.838 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:03:34.838 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:03:35.417 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:03:35.418 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:03:35.418 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:03:35.418 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:03:35.418 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:03:35.419 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:03:36.010 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:03:36.012 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:03:36.012 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:03:36.012 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:03:36.012 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:03:36.012 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:03:36.606 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:03:36.606 [D] [scanner.go:67]  [9] }
2019/11/14 11:03:36.606 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:03:37.184 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:03:37.194 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:03:37.756 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:03:37.887 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:03:39.151 [D] [user_service.go:21]  *interface {}
2019/11/14 11:03:39.151 [D] [user_service.go:21]  0xc0019f1d80
2019/11/14 11:03:39.151 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:03:39.151 [C] [panic.go:679]  Handler crashed with error reflect: NumField of non-struct type
2019/11/14 11:03:39.151 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:03:39.152 [C] [panic.go:679]  C:/Go/src/reflect/type.go:981
2019/11/14 11:03:39.152 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:34
2019/11/14 11:03:39.152 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:03:39.152 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:03:39.152 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:03:39.152 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:03:39.152 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:03:39.152 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:03:39.152 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:03:39.153 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:03:39.153 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:06:28.416 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:06:28.416 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:06:28.416 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:06:29.043 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:06:29.043 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:06:29.043 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:06:29.044 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:06:29.044 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:06:29.044 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:06:29.044 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:06:29.044 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:06:29.613 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:06:29.613 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:06:29.613 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:06:29.613 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:06:29.613 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:06:29.613 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:06:29.613 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:06:29.613 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:06:30.335 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:06:30.345 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:06:30.345 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:06:30.345 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:06:30.346 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:06:30.346 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:06:30.933 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:06:30.943 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:06:30.943 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:06:30.943 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:06:30.943 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:06:30.943 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:06:31.612 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:06:31.613 [D] [scanner.go:67]  [9] }
2019/11/14 11:06:31.613 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:06:32.210 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:06:32.220 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:06:32.790 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:06:32.897 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:06:34.752 [D] [user_service.go:21]  *interface {}
2019/11/14 11:06:34.753 [D] [user_service.go:21]  0xc0023c1160
2019/11/14 11:06:52.982 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:06:52.982 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.NumField on ptr Value
2019/11/14 11:06:52.982 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:06:52.982 [C] [panic.go:679]  C:/Go/src/reflect/value.go:208
2019/11/14 11:06:52.982 [C] [panic.go:679]  C:/Go/src/reflect/value.go:1356
2019/11/14 11:06:52.982 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:34
2019/11/14 11:06:52.983 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:06:52.983 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:06:52.983 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:06:52.983 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:06:52.983 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:06:52.983 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:06:52.983 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:06:52.983 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:06:52.985 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:08:01.027 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:08:01.027 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:08:01.027 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:08:01.583 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:08:01.583 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:08:01.583 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:08:01.583 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:08:01.583 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:08:01.583 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:08:01.583 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:08:01.584 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:08:02.133 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:08:02.133 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:08:02.133 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:08:02.133 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:08:02.133 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:08:02.133 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:08:02.133 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:08:02.133 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:08:02.708 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:08:02.709 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:08:02.709 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:08:02.709 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:08:02.709 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:08:02.709 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:08:03.274 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:08:03.274 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:08:03.274 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:08:03.274 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:08:03.274 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:08:03.274 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:08:03.842 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:08:03.851 [D] [scanner.go:67]  [9] }
2019/11/14 11:08:03.851 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:08:04.418 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:08:04.428 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:08:04.991 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:08:05.101 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:08:10.338 [D] [user_service.go:21]  *interface {}
2019/11/14 11:08:10.338 [D] [user_service.go:21]  0xc0019838c0
2019/11/14 11:08:10.338 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:08:10.339 [C] [panic.go:679]  Handler crashed with error reflect: NumField of non-struct type
2019/11/14 11:08:10.339 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:08:10.339 [C] [panic.go:679]  C:/Go/src/reflect/type.go:981
2019/11/14 11:08:10.339 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:34
2019/11/14 11:08:10.339 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:08:10.339 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:08:10.339 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:08:10.339 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:08:10.339 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:08:10.339 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:08:10.339 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:08:10.339 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:08:10.342 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:08:12.674 [D] [user_service.go:21]  *interface {}
2019/11/14 11:08:12.674 [D] [user_service.go:21]  0xc001ac61b0
2019/11/14 11:08:12.674 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:08:12.674 [C] [panic.go:679]  Handler crashed with error reflect: NumField of non-struct type
2019/11/14 11:08:12.674 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:08:12.674 [C] [panic.go:679]  C:/Go/src/reflect/type.go:981
2019/11/14 11:08:12.674 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:34
2019/11/14 11:08:12.674 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:08:12.674 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:08:12.674 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:08:12.674 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:08:12.675 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:08:12.675 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:08:12.675 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:08:12.675 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:08:12.675 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:09:18.446 [D] [user_service.go:21]  *interface {}
2019/11/14 11:12:23.326 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:12:23.326 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:12:23.326 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:12:23.898 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:12:23.898 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:12:23.899 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:12:23.899 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:12:23.899 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:12:23.899 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:12:23.899 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:12:23.899 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:12:24.457 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:12:24.457 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:12:24.457 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:12:24.457 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:12:24.457 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:12:24.457 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:12:24.457 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:12:24.457 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:12:25.038 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:12:25.047 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:12:25.047 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:12:25.047 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:12:25.047 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:12:25.047 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:12:25.622 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:12:25.622 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:12:25.622 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:12:25.622 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:12:25.622 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:12:25.622 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:12:26.206 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:12:26.207 [D] [scanner.go:67]  [9] }
2019/11/14 11:12:26.207 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:12:26.773 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:12:26.773 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:12:27.345 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:12:27.451 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:12:30.053 [D] [user_service.go:21]  *interface {}
2019/11/14 11:13:44.509 [D] [user_service.go:21]  0xc001552d60
2019/11/14 11:13:44.509 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:13:44.509 [C] [panic.go:679]  Handler crashed with error reflect: NumField of non-struct type
2019/11/14 11:13:44.509 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:13:44.509 [C] [panic.go:679]  C:/Go/src/reflect/type.go:981
2019/11/14 11:13:44.509 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:34
2019/11/14 11:13:44.509 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:13:44.509 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:13:44.509 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:13:44.509 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:13:44.509 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:13:44.509 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:13:44.509 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:13:44.509 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:13:44.510 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:13:58.494 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:13:58.494 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:13:58.494 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:13:59.056 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:13:59.056 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:13:59.056 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:13:59.056 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:13:59.057 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:13:59.057 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:13:59.057 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:13:59.057 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:13:59.609 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:13:59.609 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:13:59.609 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:13:59.609 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:13:59.609 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:13:59.609 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:13:59.609 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:13:59.609 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:14:00.182 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:14:00.191 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:14:00.192 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:14:00.192 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:14:00.192 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:14:00.192 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:14:00.773 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:14:00.773 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:14:00.773 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:14:00.773 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:14:00.773 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:14:00.773 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:14:01.359 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:14:01.368 [D] [scanner.go:67]  [9] }
2019/11/14 11:14:01.368 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:14:01.928 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:14:01.928 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:14:02.481 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:14:02.597 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:14:17.246 [D] [user_service.go:21]  *interface {}
2019/11/14 11:14:17.246 [D] [user_service.go:21]  0xc001af5c90
2019/11/14 11:14:17.246 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:14:17.246 [C] [panic.go:679]  Handler crashed with error reflect: Field of non-struct type
2019/11/14 11:14:17.246 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:14:17.246 [C] [panic.go:679]  C:/Go/src/reflect/type.go:925
2019/11/14 11:14:17.246 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:35
2019/11/14 11:14:17.246 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:14:17.246 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:14:17.246 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:14:17.246 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:14:17.246 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:14:17.246 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:14:17.246 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:14:17.246 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:14:17.247 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:16:35.918 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:16:35.918 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:16:35.918 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:16:36.489 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:16:36.489 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:16:36.489 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:16:36.489 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:16:36.489 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:16:36.489 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:16:36.489 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:16:36.489 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:16:37.047 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:16:37.047 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:16:37.047 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:16:37.047 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:16:37.047 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:16:37.047 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:16:37.047 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:16:37.047 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:16:37.622 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:16:37.623 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:16:37.623 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:16:37.623 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:16:37.623 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:16:37.623 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:16:38.191 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:16:38.201 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:16:38.201 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:16:38.201 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:16:38.201 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:16:38.201 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:16:38.765 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:16:38.765 [D] [scanner.go:67]  [9] }
2019/11/14 11:16:38.765 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:16:39.332 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:16:39.342 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:16:39.908 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:16:40.026 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:16:45.361 [D] [user_service.go:21]  domains.User
2019/11/14 11:16:45.362 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 11:16:52.501 [D] [user_service.go:21]  BaseDocument找到了
2019/11/14 11:16:55.906 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:16:55.906 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.Field on interface Value
2019/11/14 11:16:55.906 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:16:55.907 [C] [panic.go:679]  C:/Go/src/reflect/value.go:837
2019/11/14 11:16:55.907 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:44
2019/11/14 11:16:55.907 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:16:55.907 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:16:55.907 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:16:55.907 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:16:55.907 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:16:55.907 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:16:55.907 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:16:55.907 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:16:55.930 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:18:07.668 [D] [user_service.go:21]  domains.User
2019/11/14 11:18:07.669 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 11:18:09.550 [D] [user_service.go:21]  BaseDocument找到了
2019/11/14 11:19:50.386 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:19:50.386 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.Field on interface Value
2019/11/14 11:19:50.387 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:19:50.387 [C] [panic.go:679]  C:/Go/src/reflect/value.go:837
2019/11/14 11:19:50.388 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:44
2019/11/14 11:19:50.388 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:19:50.389 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:19:50.389 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:19:50.389 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:19:50.389 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:19:50.389 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:19:50.389 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:19:50.389 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:19:50.390 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:20:20.803 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:20:20.803 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:20:20.803 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:20:21.378 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:20:21.378 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:20:21.378 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:20:21.378 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:20:21.379 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:20:21.379 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:20:21.379 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:20:21.379 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:20:21.951 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:20:21.951 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:20:21.951 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:20:21.951 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:20:21.951 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:20:21.951 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:20:21.951 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:20:21.951 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:20:22.558 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:20:22.567 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:20:22.567 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:20:22.567 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:20:22.567 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:20:22.567 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:20:23.149 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:20:23.150 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:20:23.150 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:20:23.150 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:20:23.150 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:20:23.150 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:20:23.715 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:20:23.725 [D] [scanner.go:67]  [9] }
2019/11/14 11:20:23.725 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:20:24.283 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:20:24.293 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:20:24.838 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:20:24.949 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:20:27.316 [D] [user_service.go:21]  domains.User
2019/11/14 11:20:27.316 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 11:20:27.316 [D] [user_service.go:21]  BaseDocument找到了
2019/11/14 11:20:27.316 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:20:27.316 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.FieldByName on interface Value
2019/11/14 11:20:27.316 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:20:27.316 [C] [panic.go:679]  C:/Go/src/reflect/value.go:208
2019/11/14 11:20:27.316 [C] [panic.go:679]  C:/Go/src/reflect/value.go:890
2019/11/14 11:20:27.316 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:44
2019/11/14 11:20:27.316 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:20:27.316 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:20:27.316 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:20:27.316 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:20:27.316 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:20:27.316 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:20:27.316 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:20:27.316 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:20:27.317 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:24:50.503 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:24:50.503 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:24:50.503 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:24:51.060 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:24:51.060 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:24:51.060 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:24:51.060 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:24:51.061 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:24:51.061 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:24:51.061 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:24:51.061 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:24:51.613 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:24:51.613 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:24:51.613 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:24:51.613 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:24:51.613 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:24:51.613 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:24:51.613 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:24:51.613 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:24:52.183 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:24:52.183 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:24:52.183 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:24:52.183 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:24:52.183 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:24:52.183 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:24:52.750 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:24:52.759 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:24:52.759 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:24:52.759 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:24:52.759 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:24:52.759 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:24:53.326 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:24:53.326 [D] [scanner.go:67]  [9] }
2019/11/14 11:24:53.326 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:24:53.888 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:24:53.898 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:24:54.452 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:24:54.568 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:25:11.366 [D] [user_service.go:21]  domains.User
2019/11/14 11:25:11.366 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 11:25:17.838 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:25:17.840 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.FieldByName on interface Value
2019/11/14 11:25:17.840 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:25:17.840 [C] [panic.go:679]  C:/Go/src/reflect/value.go:208
2019/11/14 11:25:17.841 [C] [panic.go:679]  C:/Go/src/reflect/value.go:890
2019/11/14 11:25:17.841 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:38
2019/11/14 11:25:17.841 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:25:17.842 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:25:17.843 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:25:17.844 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:25:17.845 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:25:17.846 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:25:17.846 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:25:17.846 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:25:17.848 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:28:47.238 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:28:47.238 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:28:47.239 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:28:47.800 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:28:47.800 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:28:47.800 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:28:47.800 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:28:47.800 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:28:47.801 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:28:47.801 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:28:47.801 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:28:48.362 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:28:48.362 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:28:48.362 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:28:48.362 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:28:48.362 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:28:48.362 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:28:48.362 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:28:48.363 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:28:48.939 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:28:48.939 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:28:48.939 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:28:48.939 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:28:48.939 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:28:48.939 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:28:49.527 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:28:49.527 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:28:49.527 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:28:49.527 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:28:49.527 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:28:49.527 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:28:50.108 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:28:50.108 [D] [scanner.go:67]  [9] }
2019/11/14 11:28:50.108 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:28:50.659 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:28:50.660 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:28:51.214 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:28:51.323 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:28:55.858 [D] [user_service.go:21]  domains.User
2019/11/14 11:28:55.858 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 11:29:12.108 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:29:12.108 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.Elem on struct Value
2019/11/14 11:29:12.108 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:29:12.108 [C] [panic.go:679]  C:/Go/src/reflect/value.go:830
2019/11/14 11:29:12.108 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:36
2019/11/14 11:29:12.108 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:29:12.108 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:29:12.108 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:29:12.108 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:29:12.108 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:29:12.108 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:29:12.108 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:29:12.108 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:29:12.109 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:33:36.494 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:33:36.494 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:33:36.494 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:33:37.052 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:33:37.052 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:33:37.052 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:33:37.052 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:33:37.052 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:33:37.052 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:33:37.052 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:33:37.053 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:33:37.624 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:33:37.624 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:33:37.624 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:33:37.624 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:33:37.624 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:33:37.624 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:33:37.624 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:33:37.624 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:33:38.193 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:33:38.203 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:33:38.203 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:33:38.203 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:33:38.203 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:33:38.203 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:33:38.772 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:33:38.772 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:33:38.772 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:33:38.772 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:33:38.772 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:33:38.772 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:33:39.342 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:33:39.342 [D] [scanner.go:67]  [9] }
2019/11/14 11:33:39.342 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:33:39.904 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:33:39.913 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:33:40.466 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:33:40.582 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:33:44.469 [D] [user_service.go:21]  domains.User
2019/11/14 11:33:44.469 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 11:33:54.454 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:33:54.455 [C] [panic.go:679]  Handler crashed with error reflect: reflect.flag.mustBeAssignable using unaddressable value
2019/11/14 11:33:54.455 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:33:54.455 [C] [panic.go:679]  C:/Go/src/reflect/value.go:247
2019/11/14 11:33:54.455 [C] [panic.go:679]  C:/Go/src/reflect/value.go:234
2019/11/14 11:33:54.455 [C] [panic.go:679]  C:/Go/src/reflect/value.go:1531
2019/11/14 11:33:54.455 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:38
2019/11/14 11:33:54.455 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:33:54.455 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:33:54.455 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:33:54.455 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:33:54.456 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:33:54.463 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:33:54.463 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:33:54.463 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:33:54.464 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 11:43:00.732 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 11:43:00.732 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 11:43:00.732 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:43:01.297 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:43:01.297 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 11:43:01.297 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 11:43:01.297 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 11:43:01.298 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 11:43:01.298 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 11:43:01.298 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 11:43:01.298 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:43:01.855 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:43:01.855 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 11:43:01.855 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 11:43:01.855 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 11:43:01.855 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 11:43:01.855 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 11:43:01.855 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 11:43:01.855 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:43:02.446 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:43:02.455 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 11:43:02.455 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:43:02.456 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 11:43:02.456 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 11:43:02.456 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:43:03.038 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:43:03.047 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 11:43:03.047 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 11:43:03.047 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 11:43:03.047 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 11:43:03.047 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:43:03.625 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:43:03.634 [D] [scanner.go:67]  [9] }
2019/11/14 11:43:03.634 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:43:04.209 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:43:04.219 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 11:43:04.782 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 11:43:04.889 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 11:43:09.401 [D] [user_service.go:21]  domains.User
2019/11/14 11:43:09.401 [D] [user_service.go:21]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 11:43:15.212 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 11:43:15.213 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.FieldByName on interface Value
2019/11/14 11:43:15.213 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 11:43:15.213 [C] [panic.go:679]  C:/Go/src/reflect/value.go:208
2019/11/14 11:43:15.213 [C] [panic.go:679]  C:/Go/src/reflect/value.go:890
2019/11/14 11:43:15.213 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:38
2019/11/14 11:43:15.213 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:21
2019/11/14 11:43:15.213 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 11:43:15.213 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 11:43:15.213 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 11:43:15.213 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 11:43:15.214 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 11:43:15.214 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 11:43:15.214 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 11:43:15.216 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 12:20:48.770 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 12:20:48.770 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 12:20:48.770 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:20:49.343 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:20:49.343 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 12:20:49.343 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 12:20:49.343 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 12:20:49.343 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 12:20:49.343 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 12:20:49.343 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 12:20:49.343 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:20:49.906 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:20:49.907 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 12:20:49.907 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 12:20:49.907 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 12:20:49.907 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 12:20:49.907 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 12:20:49.907 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 12:20:49.907 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:20:50.470 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:20:50.479 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 12:20:50.480 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:20:50.480 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 12:20:50.480 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 12:20:50.480 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:20:51.041 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:20:51.041 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 12:20:51.041 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:20:51.041 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 12:20:51.042 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 12:20:51.042 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:20:51.605 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:20:51.605 [D] [scanner.go:67]  [9] }
2019/11/14 12:20:51.605 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:20:52.166 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:20:52.176 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:20:52.728 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:20:52.840 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 12:22:06.201 [D] [user_service.go:15]  {Id  string  0 [0] false}
2019/11/14 12:22:06.201 [D] [user_controller.go:34]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 12:22:06.201 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m| 1m7.5054469s|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 12:23:58.501 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 12:23:58.501 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 12:23:58.501 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:23:59.076 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:23:59.076 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 12:23:59.076 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 12:23:59.077 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 12:23:59.077 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 12:23:59.077 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 12:23:59.077 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 12:23:59.077 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:23:59.637 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:23:59.637 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 12:23:59.637 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 12:23:59.637 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 12:23:59.637 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 12:23:59.637 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 12:23:59.637 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 12:23:59.637 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:24:00.224 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:24:00.233 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 12:24:00.233 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:24:00.233 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 12:24:00.234 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 12:24:00.234 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:24:00.806 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:24:00.806 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 12:24:00.806 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:24:00.806 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 12:24:00.806 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 12:24:00.806 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:24:01.377 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:24:01.387 [D] [scanner.go:67]  [9] }
2019/11/14 12:24:01.387 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:24:01.963 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:24:01.973 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:24:02.621 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:24:02.730 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 12:26:05.825 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 12:26:05.825 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 12:26:05.825 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:26:06.377 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:26:06.377 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 12:26:06.377 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 12:26:06.378 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 12:26:06.378 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 12:26:06.378 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 12:26:06.378 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 12:26:06.378 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:26:06.913 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:26:06.913 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 12:26:06.913 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 12:26:06.913 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 12:26:06.913 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 12:26:06.913 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 12:26:06.913 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 12:26:06.913 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:26:07.463 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:26:07.491 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 12:26:07.491 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:26:07.491 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 12:26:07.491 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 12:26:07.491 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:26:08.049 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:26:08.049 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 12:26:08.049 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:26:08.049 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 12:26:08.050 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 12:26:08.050 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:26:08.598 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:26:08.599 [D] [scanner.go:67]  [9] }
2019/11/14 12:26:08.599 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:26:09.147 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:26:09.156 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:26:09.693 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:26:09.800 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 12:27:34.853 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 12:27:34.853 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 12:27:34.853 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:27:35.518 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:27:35.518 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 12:27:35.518 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 12:27:35.518 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 12:27:35.519 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 12:27:35.519 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 12:27:35.519 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 12:27:35.519 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:27:36.136 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:27:36.136 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 12:27:36.136 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 12:27:36.136 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 12:27:36.136 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 12:27:36.136 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 12:27:36.136 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 12:27:36.136 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:27:36.782 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:27:36.792 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 12:27:36.792 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:27:36.792 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 12:27:36.792 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 12:27:36.792 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:27:37.556 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:27:37.566 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 12:27:37.566 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:27:37.566 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 12:27:37.566 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 12:27:37.566 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:27:38.169 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:27:38.179 [D] [scanner.go:67]  [9] }
2019/11/14 12:27:38.179 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:27:38.777 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:27:38.777 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:27:39.417 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:27:39.547 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 12:31:04.768 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 12:31:04.768 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 12:31:04.769 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:31:05.336 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:31:05.336 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 12:31:05.336 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 12:31:05.336 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 12:31:05.336 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 12:31:05.336 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 12:31:05.336 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 12:31:05.336 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:31:05.905 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:31:05.905 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 12:31:05.905 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 12:31:05.905 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 12:31:05.905 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 12:31:05.905 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 12:31:05.905 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 12:31:05.905 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:31:06.472 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:31:06.472 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 12:31:06.472 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:31:06.472 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 12:31:06.472 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 12:31:06.472 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:31:07.038 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:31:07.038 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 12:31:07.038 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:31:07.038 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 12:31:07.038 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 12:31:07.038 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:31:07.608 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:31:07.608 [D] [scanner.go:67]  [9] }
2019/11/14 12:31:07.608 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:31:08.163 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:31:08.164 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:31:08.721 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:31:08.831 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 12:31:49.366 [D] [user_controller.go:34]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 12:31:49.366 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|  38.4541515s|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 12:34:29.589 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 12:34:29.589 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 12:34:29.589 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:34:30.132 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:34:30.132 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 12:34:30.132 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 12:34:30.132 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 12:34:30.132 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 12:34:30.132 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 12:34:30.132 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 12:34:30.132 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:34:30.666 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:34:30.666 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 12:34:30.666 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 12:34:30.666 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 12:34:30.666 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 12:34:30.666 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 12:34:30.666 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 12:34:30.666 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:34:31.216 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:34:31.226 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 12:34:31.226 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:34:31.226 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 12:34:31.226 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 12:34:31.226 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:34:31.769 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:34:31.769 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 12:34:31.769 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 12:34:31.769 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 12:34:31.770 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 12:34:31.770 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:34:32.316 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:34:32.317 [D] [scanner.go:67]  [9] }
2019/11/14 12:34:32.317 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:34:32.862 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:34:32.863 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 12:34:33.402 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 12:34:33.510 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 12:34:38.192 [D] [user_controller.go:34]  {{ObjectIdHex("5dbbb3789f784d1af2521092") 0 0} Falma Male 150}
2019/11/14 12:34:38.193 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|           0s|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 13:58:37.123 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 13:58:37.123 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 13:58:37.123 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 13:58:37.688 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 13:58:37.688 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 13:58:37.688 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 13:58:37.688 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 13:58:37.688 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 13:58:37.688 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 13:58:37.688 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 13:58:37.688 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 13:58:38.251 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 13:58:38.251 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 13:58:38.251 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 13:58:38.251 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 13:58:38.251 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 13:58:38.251 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 13:58:38.252 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 13:58:38.252 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 13:58:38.827 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 13:58:38.828 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 13:58:38.828 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 13:58:38.828 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 13:58:38.828 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 13:58:38.828 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 13:58:39.397 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 13:58:39.397 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 13:58:39.397 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 13:58:39.397 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 13:58:39.397 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 13:58:39.397 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 13:58:39.967 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 13:58:39.976 [D] [scanner.go:67]  [9] }
2019/11/14 13:58:39.976 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 13:58:40.543 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 13:58:40.543 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 13:58:41.100 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 13:58:41.221 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 13:58:47.767 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 13:58:47.767 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.FieldByName on interface Value
2019/11/14 13:58:47.767 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 13:58:47.767 [C] [panic.go:679]  C:/Go/src/reflect/value.go:208
2019/11/14 13:58:47.767 [C] [panic.go:679]  C:/Go/src/reflect/value.go:890
2019/11/14 13:58:47.767 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:61
2019/11/14 13:58:47.767 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:25
2019/11/14 13:58:47.767 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 13:58:47.767 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 13:58:47.767 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 13:58:47.767 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 13:58:47.767 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 13:58:47.767 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 13:58:47.767 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 13:58:47.767 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 13:58:47.768 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:00:10.597 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:00:10.597 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:00:10.597 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:00:11.158 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:00:11.158 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:00:11.158 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:00:11.158 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:00:11.158 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:00:11.159 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:00:11.159 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:00:11.159 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:00:11.720 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:00:11.720 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:00:11.720 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:00:11.720 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:00:11.720 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:00:11.720 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:00:11.720 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:00:11.720 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:00:12.349 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:00:12.350 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:00:12.350 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:00:12.350 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:00:12.350 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:00:12.350 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:00:12.920 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:00:12.920 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:00:12.920 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:00:12.920 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:00:12.920 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:00:12.920 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:00:13.504 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:00:13.513 [D] [scanner.go:67]  [9] }
2019/11/14 14:00:13.513 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:00:14.109 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:00:14.118 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:00:14.681 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:00:14.794 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:00:19.952 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:00:19.952 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.FieldByName on interface Value
2019/11/14 14:00:19.952 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:00:19.952 [C] [panic.go:679]  C:/Go/src/reflect/value.go:208
2019/11/14 14:00:19.952 [C] [panic.go:679]  C:/Go/src/reflect/value.go:890
2019/11/14 14:00:19.952 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:61
2019/11/14 14:00:19.952 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:25
2019/11/14 14:00:19.952 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 14:00:19.952 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:00:19.952 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:00:19.952 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:00:19.952 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:00:19.952 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:00:19.952 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:00:19.952 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:00:19.953 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:01:23.684 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:01:23.684 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:01:23.684 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:24.220 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:24.220 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:01:24.220 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:01:24.220 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:01:24.220 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:01:24.220 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:01:24.220 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:01:24.220 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:24.752 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:24.752 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:01:24.752 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:01:24.752 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:01:24.752 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:01:24.752 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:01:24.753 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:01:24.753 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:25.319 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:25.328 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:01:25.328 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:01:25.328 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:01:25.329 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:01:25.329 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:25.878 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:25.878 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:01:25.878 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:01:25.879 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:01:25.879 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:01:25.879 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:26.429 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:26.429 [D] [scanner.go:67]  [9] }
2019/11/14 14:01:26.429 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:26.991 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:26.992 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:27.548 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:27.662 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:01:53.531 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:01:53.531 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:01:53.531 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:54.080 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:54.080 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:01:54.080 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:01:54.080 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:01:54.080 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:01:54.080 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:01:54.080 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:01:54.080 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:54.613 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:54.613 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:01:54.613 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:01:54.613 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:01:54.613 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:01:54.613 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:01:54.613 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:01:54.613 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:55.157 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:55.166 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:01:55.167 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:01:55.167 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:01:55.167 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:01:55.167 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:55.704 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:55.704 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:01:55.704 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:01:55.704 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:01:55.705 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:01:55.705 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:56.251 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:56.260 [D] [scanner.go:67]  [9] }
2019/11/14 14:01:56.260 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:56.797 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:56.798 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:01:57.339 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:01:57.445 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:03:48.382 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:03:48.382 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.FieldByName on interface Value
2019/11/14 14:03:48.382 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:03:48.382 [C] [panic.go:679]  C:/Go/src/reflect/value.go:208
2019/11/14 14:03:48.382 [C] [panic.go:679]  C:/Go/src/reflect/value.go:890
2019/11/14 14:03:48.382 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:61
2019/11/14 14:03:48.382 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:25
2019/11/14 14:03:48.382 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 14:03:48.382 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:03:48.382 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:03:48.382 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:03:48.382 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:03:48.382 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:03:48.382 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:03:48.382 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:03:48.383 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:05:32.530 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:05:32.530 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:05:32.530 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:05:33.086 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:05:33.086 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:05:33.086 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:05:33.087 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:05:33.087 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:05:33.087 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:05:33.087 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:05:33.087 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:05:33.653 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:05:33.653 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:05:33.653 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:05:33.653 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:05:33.653 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:05:33.653 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:05:33.653 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:05:33.653 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:05:34.233 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:05:34.234 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:05:34.234 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:05:34.234 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:05:34.234 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:05:34.234 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:05:34.803 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:05:34.803 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:05:34.803 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:05:34.803 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:05:34.803 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:05:34.803 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:05:35.374 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:05:35.383 [D] [scanner.go:67]  [9] }
2019/11/14 14:05:35.383 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:05:35.947 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:05:35.956 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:05:36.514 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:05:36.621 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:05:47.759 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:05:47.760 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.Elem on struct Value
2019/11/14 14:05:47.760 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:05:47.760 [C] [panic.go:679]  C:/Go/src/reflect/value.go:830
2019/11/14 14:05:47.760 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:58
2019/11/14 14:05:47.760 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:26
2019/11/14 14:05:47.760 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 14:05:47.760 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:05:47.760 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:05:47.760 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:05:47.760 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:05:47.761 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:05:47.761 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:05:47.761 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:05:47.762 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:11:23.340 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:11:23.340 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:11:23.340 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:11:23.964 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:11:23.964 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:11:23.964 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:11:23.965 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:11:23.965 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:11:23.965 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:11:23.965 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:11:23.965 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:11:24.532 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:11:24.533 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:11:24.533 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:11:24.533 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:11:24.533 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:11:24.533 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:11:24.533 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:11:24.533 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:11:25.100 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:11:25.101 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:11:25.101 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:11:25.101 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:11:25.101 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:11:25.101 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:11:25.669 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:11:25.678 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:11:25.678 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:11:25.678 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:11:25.678 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:11:25.678 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:11:26.246 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:11:26.246 [D] [scanner.go:67]  [9] }
2019/11/14 14:11:26.246 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:11:26.805 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:11:26.805 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:11:27.359 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:11:27.469 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:11:30.611 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:11:31.207 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:11:31.208 [E] [pool_func.go:26]  数据库修改失败
2019/11/14 14:11:31.208 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:11:31.208 [C] [panic.go:679]  Handler crashed with error not found
2019/11/14 14:11:31.208 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:11:31.208 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:30
2019/11/14 14:11:31.208 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/connection/pool/pool_func.go:26
2019/11/14 14:11:31.208 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:35
2019/11/14 14:11:31.208 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 14:11:31.208 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:11:31.208 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:11:31.208 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:11:31.208 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:11:31.208 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:11:31.208 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:11:31.208 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:11:31.209 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:12:00.838 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:12:00.838 [C] [panic.go:679]  Handler crashed with error invalid input to ObjectIdHex: ""
2019/11/14 14:12:00.838 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:12:00.838 [C] [panic.go:679]  F:/go-work/src/github.com/globalsign/mgo/bson/bson.go:212
2019/11/14 14:12:00.838 [C] [panic.go:679]  F:/go-work/src/beemongo/utils/copy_field/copy.go:31
2019/11/14 14:12:00.838 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:12
2019/11/14 14:12:00.838 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:12:00.838 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:12:00.838 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:12:00.838 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:12:00.838 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:12:00.838 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:12:00.838 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:12:00.839 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:15:21.128 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:15:21.128 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:15:21.128 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:15:21.680 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:15:21.680 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:15:21.680 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:15:21.681 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:15:21.681 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:15:21.681 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:15:21.681 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:15:21.681 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:15:22.228 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:15:22.228 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:15:22.228 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:15:22.228 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:15:22.228 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:15:22.228 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:15:22.228 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:15:22.228 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:15:22.799 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:15:22.809 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:15:22.809 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:15:22.809 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:15:22.809 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:15:22.809 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:15:23.373 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:15:23.373 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:15:23.373 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:15:23.373 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:15:23.373 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:15:23.373 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:15:23.941 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:15:23.942 [D] [scanner.go:67]  [9] }
2019/11/14 14:15:23.942 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:15:24.506 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:15:24.506 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:15:25.054 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:15:25.161 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:15:32.584 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:15:32.584 [C] [panic.go:679]  Handler crashed with error invalid input to ObjectIdHex: ""
2019/11/14 14:15:32.584 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:15:32.584 [C] [panic.go:679]  F:/go-work/src/github.com/globalsign/mgo/bson/bson.go:212
2019/11/14 14:15:32.585 [C] [panic.go:679]  F:/go-work/src/beemongo/utils/copy_field/copy.go:31
2019/11/14 14:15:32.585 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:12
2019/11/14 14:15:32.585 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:15:32.585 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:15:32.585 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:15:32.585 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:15:32.586 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:15:32.586 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:15:32.586 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:15:32.587 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:21:38.558 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:21:38.558 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:21:38.559 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:21:39.116 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:21:39.116 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:21:39.116 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:21:39.116 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:21:39.116 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:21:39.117 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:21:39.117 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:21:39.117 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:21:39.669 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:21:39.669 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:21:39.669 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:21:39.669 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:21:39.669 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:21:39.669 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:21:39.669 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:21:39.669 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:21:40.244 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:21:40.254 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:21:40.254 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:21:40.254 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:21:40.254 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:21:40.254 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:21:40.821 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:21:40.830 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:21:40.830 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:21:40.830 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:21:40.830 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:21:40.830 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:21:41.403 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:21:41.403 [D] [scanner.go:67]  [9] }
2019/11/14 14:21:41.403 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:21:41.965 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:21:41.974 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:21:42.546 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:21:42.662 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:21:46.252 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:21:46.848 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:21:46.848 [E] [pool_func.go:26]  数据库插入失败
2019/11/14 14:21:46.848 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:21:46.848 [C] [panic.go:679]  Handler crashed with error ObjectIDs must be exactly 12 bytes long (got 0)
2019/11/14 14:21:46.848 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:21:46.848 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:25
2019/11/14 14:21:46.849 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/connection/pool/pool_func.go:26
2019/11/14 14:21:46.849 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:35
2019/11/14 14:21:46.849 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 14:21:46.849 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:21:46.849 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:21:46.849 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:21:46.849 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:21:46.849 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:21:46.849 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:21:46.849 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:21:46.849 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:22:52.171 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:22:53.425 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:22:53.425 [E] [pool_func.go:26]  数据库插入失败
2019/11/14 14:22:53.425 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:22:53.425 [C] [panic.go:679]  Handler crashed with error ObjectIDs must be exactly 12 bytes long (got 0)
2019/11/14 14:22:53.425 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:22:53.425 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:25
2019/11/14 14:22:53.425 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/connection/pool/pool_func.go:26
2019/11/14 14:22:53.425 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:35
2019/11/14 14:22:53.425 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 14:22:53.425 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:22:53.425 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:22:53.426 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:22:53.426 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:22:53.426 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:22:53.426 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:22:53.426 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:22:53.426 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:27:33.201 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:27:33.201 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:27:33.201 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:27:33.777 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:27:33.777 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:27:33.777 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:27:33.777 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:27:33.777 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:27:33.777 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:27:33.777 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:27:33.777 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:27:34.355 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:27:34.356 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:27:34.356 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:27:34.356 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:27:34.356 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:27:34.356 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:27:34.356 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:27:34.356 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:27:34.944 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:27:34.945 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:27:34.945 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:27:34.945 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:27:34.945 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:27:34.945 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:27:35.516 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:27:35.516 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:27:35.517 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:27:35.517 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:27:35.517 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:27:35.517 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:27:36.097 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:27:36.107 [D] [scanner.go:67]  [9] }
2019/11/14 14:27:36.107 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:27:36.681 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:27:36.691 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:27:37.285 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:27:37.402 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:28:12.341 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:28:12.341 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:28:12.341 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:12.906 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:12.906 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:28:12.906 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:28:12.906 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:28:12.906 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:28:12.906 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:28:12.906 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:28:12.906 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:13.459 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:13.459 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:28:13.459 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:28:13.459 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:28:13.459 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:28:13.459 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:28:13.459 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:28:13.459 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:14.035 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:14.044 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:28:14.044 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:28:14.044 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:28:14.044 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:28:14.044 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:14.618 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:14.628 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:28:14.628 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:28:14.628 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:28:14.628 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:28:14.628 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:15.212 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:15.212 [D] [scanner.go:67]  [9] }
2019/11/14 14:28:15.212 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:15.779 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:15.788 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:16.356 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:16.474 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:28:23.553 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:28:23.554 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.FieldByName on interface Value
2019/11/14 14:28:23.554 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:28:23.554 [C] [panic.go:679]  C:/Go/src/reflect/value.go:208
2019/11/14 14:28:23.554 [C] [panic.go:679]  C:/Go/src/reflect/value.go:890
2019/11/14 14:28:23.554 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:58
2019/11/14 14:28:23.554 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:18
2019/11/14 14:28:23.554 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 14:28:23.554 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:28:23.554 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:28:23.554 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:28:23.554 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:28:23.554 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:28:23.554 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:28:23.554 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:28:23.555 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:28:42.178 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:28:42.179 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:28:42.179 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:42.737 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:42.737 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:28:42.737 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:28:42.737 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:28:42.737 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:28:42.737 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:28:42.737 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:28:42.737 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:43.300 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:43.300 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:28:43.300 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:28:43.300 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:28:43.300 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:28:43.300 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:28:43.300 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:28:43.300 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:43.877 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:43.878 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:28:43.878 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:28:43.878 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:28:43.878 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:28:43.878 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:44.455 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:44.464 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:28:44.464 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:28:44.464 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:28:44.464 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:28:44.464 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:45.048 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:45.057 [D] [scanner.go:67]  [9] }
2019/11/14 14:28:45.057 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:45.623 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:45.624 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:28:46.182 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:28:46.291 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:28:49.065 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:28:49.065 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.Elem on struct Value
2019/11/14 14:28:49.065 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:28:49.066 [C] [panic.go:679]  C:/Go/src/reflect/value.go:830
2019/11/14 14:28:49.066 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:57
2019/11/14 14:28:49.066 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:18
2019/11/14 14:28:49.066 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 14:28:49.066 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:28:49.066 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:28:49.066 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:28:49.066 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:28:49.066 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:28:49.066 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:28:49.066 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:28:49.067 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:31:13.630 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:31:13.630 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:31:13.630 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:31:14.205 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:31:14.205 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:31:14.205 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:31:14.205 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:31:14.206 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:31:14.206 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:31:14.206 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:31:14.206 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:31:14.769 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:31:14.769 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:31:14.769 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:31:14.769 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:31:14.769 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:31:14.769 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:31:14.769 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:31:14.769 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:31:15.359 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:31:15.369 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:31:15.369 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:31:15.369 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:31:15.369 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:31:15.369 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:31:15.942 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:31:15.942 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:31:15.942 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:31:15.942 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:31:15.943 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:31:15.943 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:31:16.526 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:31:16.526 [D] [scanner.go:67]  [9] }
2019/11/14 14:31:16.526 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:31:17.105 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:31:17.114 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:31:17.666 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:31:17.773 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:31:50.060 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:31:50.097 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.FieldByName on ptr Value
2019/11/14 14:31:50.097 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:31:50.097 [C] [panic.go:679]  C:/Go/src/reflect/value.go:208
2019/11/14 14:31:50.097 [C] [panic.go:679]  C:/Go/src/reflect/value.go:890
2019/11/14 14:31:50.098 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:54
2019/11/14 14:31:50.098 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:18
2019/11/14 14:31:50.098 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 14:31:50.098 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:31:50.098 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:31:50.098 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:31:50.098 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:31:50.098 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:31:50.098 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:31:50.098 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:31:50.098 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:32:48.434 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 14:32:48.434 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 14:32:48.434 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:32:49.002 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:32:49.002 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 14:32:49.002 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 14:32:49.003 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\baseDocument.go
2019/11/14 14:32:49.003 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 14:32:49.003 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 14:32:49.003 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 14:32:49.003 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:32:49.564 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:32:49.564 [D] [scanner.go:67]  [2] 	BaseDocument
2019/11/14 14:32:49.564 [D] [scanner.go:67]  [3] 	// @Index unique
2019/11/14 14:32:49.564 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 14:32:49.564 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 14:32:49.564 [D] [scanner.go:67]  [4] 	Name string // 姓名
2019/11/14 14:32:49.564 [D] [scanner.go:84]  读取字段：	Name string // 姓名
2019/11/14 14:32:49.564 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:32:50.139 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:32:50.149 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 14:32:50.149 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:32:50.149 [D] [scanner.go:67]  [6] 	Sex string // 性别
2019/11/14 14:32:50.149 [D] [scanner.go:84]  读取字段：	Sex string // 性别
2019/11/14 14:32:50.149 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:32:50.716 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:32:50.726 [D] [scanner.go:67]  [7] 	// @Index
2019/11/14 14:32:50.726 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 14:32:50.726 [D] [scanner.go:67]  [8] 	Age int16 // 年龄
2019/11/14 14:32:50.726 [D] [scanner.go:84]  读取字段：	Age int16 // 年龄
2019/11/14 14:32:50.726 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:32:51.300 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:32:51.309 [D] [scanner.go:67]  [9] }
2019/11/14 14:32:51.309 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:32:51.883 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:32:51.893 [I] [pool.go:22]  数据库名：beemongo
2019/11/14 14:32:52.445 [I] [pool.go:22]  预制数据库连接 50 个，成功
2019/11/14 14:32:52.559 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 14:32:58.480 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:32:58.481 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.FieldByName on interface Value
2019/11/14 14:32:58.481 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:32:58.481 [C] [panic.go:679]  C:/Go/src/reflect/value.go:208
2019/11/14 14:32:58.481 [C] [panic.go:679]  C:/Go/src/reflect/value.go:890
2019/11/14 14:32:58.481 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:58
2019/11/14 14:32:58.481 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:18
2019/11/14 14:32:58.481 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 14:32:58.481 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:32:58.481 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:32:58.481 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:32:58.481 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:32:58.481 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:32:58.481 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:32:58.481 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:32:58.482 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 14:36:42.876 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 14:36:42.876 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.FieldByName on interface Value
2019/11/14 14:36:42.876 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 14:36:42.876 [C] [panic.go:679]  C:/Go/src/reflect/value.go:208
2019/11/14 14:36:42.876 [C] [panic.go:679]  C:/Go/src/reflect/value.go:890
2019/11/14 14:36:42.876 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:58
2019/11/14 14:36:42.876 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:18
2019/11/14 14:36:42.876 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 14:36:42.876 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 14:36:42.877 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 14:36:42.877 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 14:36:42.877 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 14:36:42.877 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 14:36:42.877 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 14:36:42.877 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 14:36:42.877 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 18:12:28.805 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 18:12:28.805 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 18:12:28.805 [I] [pool.go:34]  数据库名：beemongo
2019/11/14 18:12:28.821 [I] [pool.go:34]  数据库连接成功
2019/11/14 18:12:28.821 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 18:12:28.821 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 18:12:28.821 [D] [scanner.go:32]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 18:12:28.821 [D] [scanner.go:67]  [1] type User struct {
2019/11/14 18:12:28.821 [D] [scanner.go:82]  第一行：type User struct {
2019/11/14 18:12:28.821 [D] [scanner.go:67]  [2] 	Id bson.ObjectId `bson:"_id"` // id
2019/11/14 18:12:28.821 [D] [scanner.go:67]  [3] 	// @Index
2019/11/14 18:12:28.821 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 18:12:28.821 [D] [scanner.go:67]  [4] 	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:12:28.821 [D] [scanner.go:84]  读取字段：	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:12:28.924 [D] [scanner.go:67]  [5] 	// @Index
2019/11/14 18:12:28.924 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 18:12:28.924 [D] [scanner.go:67]  [6] 	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:12:28.924 [D] [scanner.go:84]  读取字段：	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:12:29.185 [D] [scanner.go:67]  [7] 	// @Index unique
2019/11/14 18:12:29.186 [D] [scanner.go:84]  找到 @Index ：	// @Index unique
2019/11/14 18:12:29.186 [D] [scanner.go:84]  找到 @Index unique
2019/11/14 18:12:29.186 [D] [scanner.go:67]  [8] 	Name string `bson:"Name"` // 姓名
2019/11/14 18:12:29.186 [D] [scanner.go:84]  读取字段：	Name string `bson:"Name"` // 姓名
2019/11/14 18:12:29.478 [D] [scanner.go:67]  [9] 	// @Index
2019/11/14 18:12:29.478 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 18:12:29.478 [D] [scanner.go:67]  [10] 	Sex string `bson:"Sex"` // 性别
2019/11/14 18:12:29.478 [D] [scanner.go:84]  读取字段：	Sex string `bson:"Sex"` // 性别
2019/11/14 18:12:29.688 [D] [scanner.go:67]  [11] 	// @Index
2019/11/14 18:12:29.688 [D] [scanner.go:84]  找到 @Index ：	// @Index
2019/11/14 18:12:29.688 [D] [scanner.go:67]  [12] 	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:12:29.688 [D] [scanner.go:84]  读取字段：	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:12:30.028 [D] [scanner.go:67]  [13] }
2019/11/14 18:12:30.161 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 18:13:41.809 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 18:13:41.809 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 18:13:41.809 [I] [pool.go:34]  数据库名：beemongo
2019/11/14 18:13:41.824 [I] [pool.go:34]  数据库连接成功
2019/11/14 18:13:41.824 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 18:13:41.824 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 18:13:41.824 [D] [scanner.go:31]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 18:13:41.824 [D] [scanner.go:66]  [1] type User struct {
2019/11/14 18:13:41.824 [D] [scanner.go:81]  第一行：type User struct {
2019/11/14 18:13:41.824 [D] [scanner.go:66]  [2] 	Id bson.ObjectId `bson:"_id"` // id
2019/11/14 18:13:41.824 [D] [scanner.go:66]  [3] 	// @Index
2019/11/14 18:13:41.824 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:13:41.824 [D] [scanner.go:66]  [4] 	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:13:41.824 [D] [scanner.go:83]  读取字段：	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:13:41.898 [D] [scanner.go:66]  [5] 	// @Index
2019/11/14 18:13:41.898 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:13:41.898 [D] [scanner.go:66]  [6] 	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:13:41.898 [D] [scanner.go:83]  读取字段：	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:13:42.024 [D] [scanner.go:66]  [7] 	// @Index unique
2019/11/14 18:13:42.024 [D] [scanner.go:83]  找到 @Index ：	// @Index unique
2019/11/14 18:13:42.024 [D] [scanner.go:83]  找到 @Index unique
2019/11/14 18:13:42.024 [D] [scanner.go:66]  [8] 	Name string `bson:"Name"` // 姓名
2019/11/14 18:13:42.024 [D] [scanner.go:83]  读取字段：	Name string `bson:"Name"` // 姓名
2019/11/14 18:13:42.400 [D] [scanner.go:66]  [9] 	// @Index
2019/11/14 18:13:42.400 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:13:42.400 [D] [scanner.go:66]  [10] 	Sex string `bson:"Sex"` // 性别
2019/11/14 18:13:42.400 [D] [scanner.go:83]  读取字段：	Sex string `bson:"Sex"` // 性别
2019/11/14 18:13:42.643 [D] [scanner.go:66]  [11] 	// @Index
2019/11/14 18:13:42.643 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:13:42.643 [D] [scanner.go:66]  [12] 	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:13:42.643 [D] [scanner.go:83]  读取字段：	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:13:42.959 [D] [scanner.go:66]  [13] }
2019/11/14 18:13:43.078 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 18:14:32.036 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 18:14:32.036 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.Elem on struct Value
2019/11/14 18:14:32.036 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 18:14:32.036 [C] [panic.go:679]  C:/Go/src/reflect/value.go:830
2019/11/14 18:14:32.036 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:14
2019/11/14 18:14:32.036 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 18:14:32.036 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 18:14:32.036 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 18:14:32.036 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 18:14:32.036 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 18:14:32.036 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 18:14:32.037 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 18:14:32.037 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 18:14:32.037 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 18:14:45.948 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 18:14:45.949 [C] [panic.go:679]  Handler crashed with error reflect: call of reflect.Value.Elem on struct Value
2019/11/14 18:14:45.949 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 18:14:45.949 [C] [panic.go:679]  C:/Go/src/reflect/value.go:830
2019/11/14 18:14:45.949 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:14
2019/11/14 18:14:45.949 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:14
2019/11/14 18:14:45.949 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 18:14:45.949 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 18:14:45.949 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 18:14:45.949 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 18:14:45.949 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 18:14:45.949 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 18:14:45.949 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 18:14:45.951 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 18:17:30.122 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 18:17:30.122 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 18:17:30.122 [I] [pool.go:34]  数据库名：beemongo
2019/11/14 18:17:30.153 [I] [pool.go:34]  数据库连接成功
2019/11/14 18:17:30.153 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 18:17:30.154 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 18:17:30.154 [D] [scanner.go:31]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 18:17:30.154 [D] [scanner.go:66]  [1] type User struct {
2019/11/14 18:17:30.154 [D] [scanner.go:81]  第一行：type User struct {
2019/11/14 18:17:30.154 [D] [scanner.go:66]  [2] 	Id bson.ObjectId `bson:"_id"` // id
2019/11/14 18:17:30.154 [D] [scanner.go:66]  [3] 	// @Index
2019/11/14 18:17:30.154 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:17:30.154 [D] [scanner.go:66]  [4] 	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:17:30.154 [D] [scanner.go:83]  读取字段：	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:17:30.154 [D] [scanner.go:66]  [5] 	// @Index
2019/11/14 18:17:30.154 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:17:30.154 [D] [scanner.go:66]  [6] 	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:17:30.154 [D] [scanner.go:83]  读取字段：	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:17:30.155 [D] [scanner.go:66]  [7] 	// @Index unique
2019/11/14 18:17:30.155 [D] [scanner.go:83]  找到 @Index ：	// @Index unique
2019/11/14 18:17:30.155 [D] [scanner.go:83]  找到 @Index unique
2019/11/14 18:17:30.155 [D] [scanner.go:66]  [8] 	Name string `bson:"Name"` // 姓名
2019/11/14 18:17:30.155 [D] [scanner.go:83]  读取字段：	Name string `bson:"Name"` // 姓名
2019/11/14 18:17:30.155 [D] [scanner.go:66]  [9] 	// @Index
2019/11/14 18:17:30.155 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:17:30.155 [D] [scanner.go:66]  [10] 	Sex string `bson:"Sex"` // 性别
2019/11/14 18:17:30.155 [D] [scanner.go:83]  读取字段：	Sex string `bson:"Sex"` // 性别
2019/11/14 18:17:30.155 [D] [scanner.go:66]  [11] 	// @Index
2019/11/14 18:17:30.155 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:17:30.155 [D] [scanner.go:66]  [12] 	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:17:30.155 [D] [scanner.go:83]  读取字段：	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:17:30.156 [D] [scanner.go:66]  [13] }
2019/11/14 18:17:30.268 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 18:17:33.165 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 18:17:33.166 [C] [panic.go:679]  Handler crashed with error Fatal error:type of parameters must be Ptr of value
2019/11/14 18:17:33.166 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 18:17:33.166 [C] [panic.go:679]  F:/go-work/src/beemongo/utils/copy_field/copy.go:16
2019/11/14 18:17:33.166 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:12
2019/11/14 18:17:33.166 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 18:17:33.166 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 18:17:33.166 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 18:17:33.166 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 18:17:33.166 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 18:17:33.166 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 18:17:33.166 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 18:17:33.168 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 18:18:12.791 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 18:18:12.791 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 18:18:12.791 [I] [pool.go:34]  数据库名：beemongo
2019/11/14 18:18:12.808 [I] [pool.go:34]  数据库连接成功
2019/11/14 18:18:12.808 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 18:18:12.808 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 18:18:12.809 [D] [scanner.go:31]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 18:18:12.809 [D] [scanner.go:66]  [1] type User struct {
2019/11/14 18:18:12.809 [D] [scanner.go:81]  第一行：type User struct {
2019/11/14 18:18:12.809 [D] [scanner.go:66]  [2] 	Id bson.ObjectId `bson:"_id"` // id
2019/11/14 18:18:12.809 [D] [scanner.go:66]  [3] 	// @Index
2019/11/14 18:18:12.809 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:18:12.809 [D] [scanner.go:66]  [4] 	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:18:12.809 [D] [scanner.go:83]  读取字段：	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:18:12.809 [D] [scanner.go:66]  [5] 	// @Index
2019/11/14 18:18:12.809 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:18:12.809 [D] [scanner.go:66]  [6] 	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:18:12.809 [D] [scanner.go:83]  读取字段：	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:18:12.810 [D] [scanner.go:66]  [7] 	// @Index unique
2019/11/14 18:18:12.810 [D] [scanner.go:83]  找到 @Index ：	// @Index unique
2019/11/14 18:18:12.810 [D] [scanner.go:83]  找到 @Index unique
2019/11/14 18:18:12.810 [D] [scanner.go:66]  [8] 	Name string `bson:"Name"` // 姓名
2019/11/14 18:18:12.810 [D] [scanner.go:83]  读取字段：	Name string `bson:"Name"` // 姓名
2019/11/14 18:18:12.810 [D] [scanner.go:66]  [9] 	// @Index
2019/11/14 18:18:12.810 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:18:12.810 [D] [scanner.go:66]  [10] 	Sex string `bson:"Sex"` // 性别
2019/11/14 18:18:12.810 [D] [scanner.go:83]  读取字段：	Sex string `bson:"Sex"` // 性别
2019/11/14 18:18:12.810 [D] [scanner.go:66]  [11] 	// @Index
2019/11/14 18:18:12.810 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:18:12.810 [D] [scanner.go:66]  [12] 	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:18:12.810 [D] [scanner.go:83]  读取字段：	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:18:12.810 [D] [scanner.go:66]  [13] }
2019/11/14 18:18:12.923 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 18:18:14.546 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|     1.9953ms|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 18:18:31.307 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|    13.9619ms|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 18:20:01.687 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 18:20:01.687 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 18:20:01.687 [I] [pool.go:34]  数据库名：beemongo
2019/11/14 18:20:01.703 [I] [pool.go:34]  数据库连接成功
2019/11/14 18:20:01.703 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 18:20:01.703 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 18:20:01.703 [D] [scanner.go:31]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 18:20:01.703 [D] [scanner.go:66]  [1] type User struct {
2019/11/14 18:20:01.704 [D] [scanner.go:81]  第一行：type User struct {
2019/11/14 18:20:01.704 [D] [scanner.go:66]  [2] 	Id bson.ObjectId `bson:"_id"` // id
2019/11/14 18:20:01.704 [D] [scanner.go:66]  [3] 	// @Index
2019/11/14 18:20:01.704 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:20:01.704 [D] [scanner.go:66]  [4] 	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:20:01.704 [D] [scanner.go:83]  读取字段：	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:20:01.704 [D] [scanner.go:66]  [5] 	// @Index
2019/11/14 18:20:01.704 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:20:01.704 [D] [scanner.go:66]  [6] 	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:20:01.704 [D] [scanner.go:83]  读取字段：	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:20:01.704 [D] [scanner.go:66]  [7] 	// @Index unique
2019/11/14 18:20:01.704 [D] [scanner.go:83]  找到 @Index ：	// @Index unique
2019/11/14 18:20:01.704 [D] [scanner.go:83]  找到 @Index unique
2019/11/14 18:20:01.705 [D] [scanner.go:66]  [8] 	Name string `bson:"Name"` // 姓名
2019/11/14 18:20:01.705 [D] [scanner.go:83]  读取字段：	Name string `bson:"Name"` // 姓名
2019/11/14 18:20:01.705 [D] [scanner.go:66]  [9] 	// @Index
2019/11/14 18:20:01.705 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:20:01.705 [D] [scanner.go:66]  [10] 	Sex string `bson:"Sex"` // 性别
2019/11/14 18:20:01.705 [D] [scanner.go:83]  读取字段：	Sex string `bson:"Sex"` // 性别
2019/11/14 18:20:01.705 [D] [scanner.go:66]  [11] 	// @Index
2019/11/14 18:20:01.705 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:20:01.705 [D] [scanner.go:66]  [12] 	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:20:01.705 [D] [scanner.go:83]  读取字段：	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:20:01.705 [D] [scanner.go:66]  [13] }
2019/11/14 18:20:01.817 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 18:20:21.058 [E] [pool_func.go:20]  数据库插入失败
2019/11/14 18:20:21.058 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 18:20:21.058 [C] [panic.go:679]  Handler crashed with error E11000 duplicate key error collection: beemongo.User index: Name_1 dup key: { : "FemaleMan" }
2019/11/14 18:20:21.058 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 18:20:21.058 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:26
2019/11/14 18:20:21.058 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/connection/pool/pool_func.go:20
2019/11/14 18:20:21.058 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:36
2019/11/14 18:20:21.058 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:16
2019/11/14 18:20:21.058 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 18:20:21.058 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 18:20:21.058 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 18:20:21.058 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 18:20:21.058 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 18:20:21.058 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 18:20:21.058 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 18:20:21.059 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 18:20:30.649 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|    17.9523ms|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 18:20:37.320 [E] [pool_func.go:20]  数据库插入失败
2019/11/14 18:20:37.321 [C] [panic.go:679]  the request url is  /user/insert
2019/11/14 18:20:37.321 [C] [panic.go:679]  Handler crashed with error E11000 duplicate key error collection: beemongo.User index: Name_1 dup key: { : "FemaleMan66" }
2019/11/14 18:20:37.321 [C] [panic.go:679]  C:/Go/src/runtime/panic.go:679
2019/11/14 18:20:37.321 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:26
2019/11/14 18:20:37.321 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/connection/pool/pool_func.go:20
2019/11/14 18:20:37.321 [C] [panic.go:679]  F:/go-work/src/beemongo/mongo/cmd/save/save.go:36
2019/11/14 18:20:37.321 [C] [panic.go:679]  F:/go-work/src/beemongo/service/user/user_service.go:16
2019/11/14 18:20:37.321 [C] [panic.go:679]  F:/go-work/src/beemongo/controllers/user_controller.go:34
2019/11/14 18:20:37.321 [C] [panic.go:679]  C:/Go/src/reflect/value.go:460
2019/11/14 18:20:37.321 [C] [panic.go:679]  C:/Go/src/reflect/value.go:321
2019/11/14 18:20:37.321 [C] [panic.go:679]  F:/go-work/src/github.com/astaxie/beego/router.go:853
2019/11/14 18:20:37.321 [C] [panic.go:679]  C:/Go/src/net/http/server.go:2802
2019/11/14 18:20:37.321 [C] [panic.go:679]  C:/Go/src/net/http/server.go:1890
2019/11/14 18:20:37.321 [C] [panic.go:679]  C:/Go/src/runtime/asm_amd64.s:1357
2019/11/14 18:20:37.321 [server.go:3053]  [HTTP] http: superfluous response.WriteHeader call from github.com/astaxie/beego/context.(*Response).WriteHeader (context.go:230)
2019/11/14 18:20:46.282 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|    20.9424ms|   match|[46m POST    [0m /user/insert   r:/user/insert
2019/11/14 18:30:56.041 [D] [server.go:2802]  |      127.0.0.1|[43m 404 [0m|      993.5µs| nomatch|[46m POST    [0m /user/update
2019/11/14 18:31:22.282 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 18:31:22.282 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 18:31:22.282 [I] [pool.go:34]  数据库名：beemongo
2019/11/14 18:31:22.304 [I] [pool.go:34]  数据库连接成功
2019/11/14 18:31:22.305 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 18:31:22.305 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 18:31:22.305 [D] [scanner.go:31]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 18:31:22.305 [D] [scanner.go:66]  [1] type User struct {
2019/11/14 18:31:22.305 [D] [scanner.go:81]  第一行：type User struct {
2019/11/14 18:31:22.305 [D] [scanner.go:66]  [2] 	Id bson.ObjectId `bson:"_id"` // id
2019/11/14 18:31:22.305 [D] [scanner.go:66]  [3] 	// @Index
2019/11/14 18:31:22.305 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:31:22.305 [D] [scanner.go:66]  [4] 	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:31:22.305 [D] [scanner.go:83]  读取字段：	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:31:22.305 [D] [scanner.go:66]  [5] 	// @Index
2019/11/14 18:31:22.306 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:31:22.306 [D] [scanner.go:66]  [6] 	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:31:22.306 [D] [scanner.go:83]  读取字段：	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:31:22.306 [D] [scanner.go:66]  [7] 	// @Index unique
2019/11/14 18:31:22.306 [D] [scanner.go:83]  找到 @Index ：	// @Index unique
2019/11/14 18:31:22.306 [D] [scanner.go:83]  找到 @Index unique
2019/11/14 18:31:22.306 [D] [scanner.go:66]  [8] 	Name string `bson:"Name"` // 姓名
2019/11/14 18:31:22.306 [D] [scanner.go:83]  读取字段：	Name string `bson:"Name"` // 姓名
2019/11/14 18:31:22.306 [D] [scanner.go:66]  [9] 	// @Index
2019/11/14 18:31:22.306 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:31:22.306 [D] [scanner.go:66]  [10] 	Sex string `bson:"Sex"` // 性别
2019/11/14 18:31:22.306 [D] [scanner.go:83]  读取字段：	Sex string `bson:"Sex"` // 性别
2019/11/14 18:31:22.306 [D] [scanner.go:66]  [11] 	// @Index
2019/11/14 18:31:22.307 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:31:22.307 [D] [scanner.go:66]  [12] 	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:31:22.307 [D] [scanner.go:83]  读取字段：	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:31:22.307 [D] [scanner.go:66]  [13] }
2019/11/14 18:31:22.424 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 18:31:52.822 [D] [server.go:2802]  |      127.0.0.1|[43m 404 [0m|      997.1µs| nomatch|[46m POST    [0m /user/update
2019/11/14 18:32:30.633 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 18:32:30.633 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 18:32:30.633 [I] [pool.go:34]  数据库名：beemongo
2019/11/14 18:32:30.649 [I] [pool.go:34]  数据库连接成功
2019/11/14 18:32:30.649 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 18:32:30.649 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 18:32:30.649 [D] [scanner.go:31]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 18:32:30.650 [D] [scanner.go:66]  [1] type User struct {
2019/11/14 18:32:30.650 [D] [scanner.go:81]  第一行：type User struct {
2019/11/14 18:32:30.650 [D] [scanner.go:66]  [2] 	Id bson.ObjectId `bson:"_id"` // id
2019/11/14 18:32:30.650 [D] [scanner.go:66]  [3] 	// @Index
2019/11/14 18:32:30.650 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:32:30.650 [D] [scanner.go:66]  [4] 	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:32:30.650 [D] [scanner.go:83]  读取字段：	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:32:30.650 [D] [scanner.go:66]  [5] 	// @Index
2019/11/14 18:32:30.650 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:32:30.650 [D] [scanner.go:66]  [6] 	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:32:30.650 [D] [scanner.go:83]  读取字段：	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:32:30.650 [D] [scanner.go:66]  [7] 	// @Index unique
2019/11/14 18:32:30.651 [D] [scanner.go:83]  找到 @Index ：	// @Index unique
2019/11/14 18:32:30.651 [D] [scanner.go:83]  找到 @Index unique
2019/11/14 18:32:30.651 [D] [scanner.go:66]  [8] 	Name string `bson:"Name"` // 姓名
2019/11/14 18:32:30.651 [D] [scanner.go:83]  读取字段：	Name string `bson:"Name"` // 姓名
2019/11/14 18:32:30.652 [D] [scanner.go:66]  [9] 	// @Index
2019/11/14 18:32:30.652 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:32:30.652 [D] [scanner.go:66]  [10] 	Sex string `bson:"Sex"` // 性别
2019/11/14 18:32:30.652 [D] [scanner.go:83]  读取字段：	Sex string `bson:"Sex"` // 性别
2019/11/14 18:32:30.652 [D] [scanner.go:66]  [11] 	// @Index
2019/11/14 18:32:30.652 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:32:30.652 [D] [scanner.go:66]  [12] 	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:32:30.652 [D] [scanner.go:83]  读取字段：	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:32:30.652 [D] [scanner.go:66]  [13] }
2019/11/14 18:32:30.766 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 18:32:40.672 [E] [value.go:460]  Sex 性别必须为 Male 或 Female
2019/11/14 18:32:40.672 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|      998.1µs|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:32:51.096 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|    17.9507ms|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:35:06.473 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 18:35:06.473 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 18:35:06.473 [I] [pool.go:34]  数据库名：beemongo
2019/11/14 18:35:06.504 [I] [pool.go:34]  数据库连接成功
2019/11/14 18:35:06.504 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 18:35:06.504 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 18:35:06.505 [D] [scanner.go:31]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 18:35:06.505 [D] [scanner.go:66]  [1] type User struct {
2019/11/14 18:35:06.505 [D] [scanner.go:81]  第一行：type User struct {
2019/11/14 18:35:06.505 [D] [scanner.go:66]  [2] 	Id bson.ObjectId `bson:"_id"` // id
2019/11/14 18:35:06.505 [D] [scanner.go:66]  [3] 	// @Index
2019/11/14 18:35:06.505 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:35:06.505 [D] [scanner.go:66]  [4] 	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:35:06.505 [D] [scanner.go:83]  读取字段：	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:35:06.514 [D] [scanner.go:66]  [5] 	// @Index
2019/11/14 18:35:06.514 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:35:06.515 [D] [scanner.go:66]  [6] 	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:35:06.515 [D] [scanner.go:83]  读取字段：	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:35:06.515 [D] [scanner.go:66]  [7] 	// @Index unique
2019/11/14 18:35:06.515 [D] [scanner.go:83]  找到 @Index ：	// @Index unique
2019/11/14 18:35:06.515 [D] [scanner.go:83]  找到 @Index unique
2019/11/14 18:35:06.515 [D] [scanner.go:66]  [8] 	Name string `bson:"Name"` // 姓名
2019/11/14 18:35:06.515 [D] [scanner.go:83]  读取字段：	Name string `bson:"Name"` // 姓名
2019/11/14 18:35:06.515 [D] [scanner.go:66]  [9] 	// @Index
2019/11/14 18:35:06.515 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:35:06.515 [D] [scanner.go:66]  [10] 	Sex string `bson:"Sex"` // 性别
2019/11/14 18:35:06.515 [D] [scanner.go:83]  读取字段：	Sex string `bson:"Sex"` // 性别
2019/11/14 18:35:06.516 [D] [scanner.go:66]  [11] 	// @Index
2019/11/14 18:35:06.516 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:35:06.516 [D] [scanner.go:66]  [12] 	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:35:06.516 [D] [scanner.go:83]  读取字段：	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:35:06.516 [D] [scanner.go:66]  [13] }
2019/11/14 18:35:06.628 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 18:35:09.477 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|     3.9885ms|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:35:30.824 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|    12.9653ms|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:36:32.358 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|  42.4005928s|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:37:33.351 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|  21.5234322s|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:40:13.091 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 18:40:13.091 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 18:40:13.091 [I] [pool.go:34]  数据库名：beemongo
2019/11/14 18:40:13.106 [I] [pool.go:34]  数据库连接成功
2019/11/14 18:40:13.106 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 18:40:13.106 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 18:40:13.107 [D] [scanner.go:31]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 18:40:13.107 [D] [scanner.go:66]  [1] type User struct {
2019/11/14 18:40:13.107 [D] [scanner.go:81]  第一行：type User struct {
2019/11/14 18:40:13.107 [D] [scanner.go:66]  [2] 	Id bson.ObjectId `bson:"_id"` // id
2019/11/14 18:40:13.107 [D] [scanner.go:66]  [3] 	// @Index
2019/11/14 18:40:13.107 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:40:13.107 [D] [scanner.go:66]  [4] 	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:40:13.107 [D] [scanner.go:83]  读取字段：	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:40:13.107 [D] [scanner.go:66]  [5] 	// @Index
2019/11/14 18:40:13.107 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:40:13.107 [D] [scanner.go:66]  [6] 	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:40:13.107 [D] [scanner.go:83]  读取字段：	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:40:13.108 [D] [scanner.go:66]  [7] 	// @Index unique
2019/11/14 18:40:13.108 [D] [scanner.go:83]  找到 @Index ：	// @Index unique
2019/11/14 18:40:13.108 [D] [scanner.go:83]  找到 @Index unique
2019/11/14 18:40:13.108 [D] [scanner.go:66]  [8] 	Name string `bson:"Name"` // 姓名
2019/11/14 18:40:13.108 [D] [scanner.go:83]  读取字段：	Name string `bson:"Name"` // 姓名
2019/11/14 18:40:13.108 [D] [scanner.go:66]  [9] 	// @Index
2019/11/14 18:40:13.108 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:40:13.108 [D] [scanner.go:66]  [10] 	Sex string `bson:"Sex"` // 性别
2019/11/14 18:40:13.108 [D] [scanner.go:83]  读取字段：	Sex string `bson:"Sex"` // 性别
2019/11/14 18:40:13.108 [D] [scanner.go:66]  [11] 	// @Index
2019/11/14 18:40:13.108 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:40:13.108 [D] [scanner.go:66]  [12] 	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:40:13.108 [D] [scanner.go:83]  读取字段：	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:40:13.109 [D] [scanner.go:66]  [13] }
2019/11/14 18:40:13.221 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 18:40:27.546 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|   2.6539014s|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:41:18.443 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|   2.8274325s|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:41:42.087 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|   4.0581447s|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:42:00.783 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|     13.962ms|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:42:10.678 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|      996.5µs|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:43:00.832 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 18:43:00.832 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 18:43:00.832 [I] [pool.go:34]  数据库名：beemongo
2019/11/14 18:43:00.848 [I] [pool.go:34]  数据库连接成功
2019/11/14 18:43:00.848 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 18:43:00.848 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 18:43:00.849 [D] [scanner.go:31]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 18:43:00.849 [D] [scanner.go:66]  [1] type User struct {
2019/11/14 18:43:00.849 [D] [scanner.go:81]  第一行：type User struct {
2019/11/14 18:43:00.849 [D] [scanner.go:66]  [2] 	Id bson.ObjectId `bson:"_id"` // id
2019/11/14 18:43:00.849 [D] [scanner.go:66]  [3] 	// @Index
2019/11/14 18:43:00.849 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:43:00.849 [D] [scanner.go:66]  [4] 	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:43:00.849 [D] [scanner.go:83]  读取字段：	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:43:00.849 [D] [scanner.go:66]  [5] 	// @Index
2019/11/14 18:43:00.849 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:43:00.849 [D] [scanner.go:66]  [6] 	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:43:00.849 [D] [scanner.go:83]  读取字段：	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:43:00.850 [D] [scanner.go:66]  [7] 	// @Index unique
2019/11/14 18:43:00.850 [D] [scanner.go:83]  找到 @Index ：	// @Index unique
2019/11/14 18:43:00.850 [D] [scanner.go:83]  找到 @Index unique
2019/11/14 18:43:00.850 [D] [scanner.go:66]  [8] 	Name string `bson:"Name"` // 姓名
2019/11/14 18:43:00.850 [D] [scanner.go:83]  读取字段：	Name string `bson:"Name"` // 姓名
2019/11/14 18:43:00.850 [D] [scanner.go:66]  [9] 	// @Index
2019/11/14 18:43:00.850 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:43:00.850 [D] [scanner.go:66]  [10] 	Sex string `bson:"Sex"` // 性别
2019/11/14 18:43:00.850 [D] [scanner.go:83]  读取字段：	Sex string `bson:"Sex"` // 性别
2019/11/14 18:43:00.850 [D] [scanner.go:66]  [11] 	// @Index
2019/11/14 18:43:00.850 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:43:00.850 [D] [scanner.go:66]  [12] 	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:43:00.850 [D] [scanner.go:83]  读取字段：	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:43:00.850 [D] [scanner.go:66]  [13] }
2019/11/14 18:43:00.963 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 18:43:06.690 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|     2.9918ms|   match|[46m POST    [0m /user/update   r:/user/update
2019/11/14 18:51:39.484 [I] [beego.go:103]  自动建表，扫描目录：
2019/11/14 18:51:39.484 [I] [beego.go:103]  F:\go-work\src\beemongo\domains
2019/11/14 18:51:39.484 [I] [pool.go:34]  数据库名：beemongo
2019/11/14 18:51:39.508 [I] [pool.go:34]  数据库连接成功
2019/11/14 18:51:39.508 [I] [hooks.go:31]  开始扫描 domains
2019/11/14 18:51:39.508 [I] [hooks.go:31]  获取 domains 路径：F:\go-work\src\beemongo\domains
2019/11/14 18:51:39.508 [D] [scanner.go:31]  F:\go-work\src\beemongo\domains\user.go
2019/11/14 18:51:39.508 [D] [scanner.go:66]  [1] type User struct {
2019/11/14 18:51:39.508 [D] [scanner.go:81]  第一行：type User struct {
2019/11/14 18:51:39.508 [D] [scanner.go:66]  [2] 	Id bson.ObjectId `bson:"_id"` // id
2019/11/14 18:51:39.508 [D] [scanner.go:66]  [3] 	// @Index
2019/11/14 18:51:39.508 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:51:39.508 [D] [scanner.go:66]  [4] 	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:51:39.509 [D] [scanner.go:83]  读取字段：	CreateTime int64 `bson:"CreateTime"` // 创建时间
2019/11/14 18:51:39.509 [D] [scanner.go:66]  [5] 	// @Index
2019/11/14 18:51:39.509 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:51:39.509 [D] [scanner.go:66]  [6] 	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:51:39.509 [D] [scanner.go:83]  读取字段：	UpdateTime int64 `bson:"UpdateTime"` // 更新时间
2019/11/14 18:51:39.509 [D] [scanner.go:66]  [7] 	// @Index unique
2019/11/14 18:51:39.509 [D] [scanner.go:83]  找到 @Index ：	// @Index unique
2019/11/14 18:51:39.509 [D] [scanner.go:83]  找到 @Index unique
2019/11/14 18:51:39.509 [D] [scanner.go:66]  [8] 	Name string `bson:"Name"` // 姓名
2019/11/14 18:51:39.509 [D] [scanner.go:83]  读取字段：	Name string `bson:"Name"` // 姓名
2019/11/14 18:51:39.509 [D] [scanner.go:66]  [9] 	// @Index
2019/11/14 18:51:39.510 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:51:39.510 [D] [scanner.go:66]  [10] 	Sex string `bson:"Sex"` // 性别
2019/11/14 18:51:39.510 [D] [scanner.go:83]  读取字段：	Sex string `bson:"Sex"` // 性别
2019/11/14 18:51:39.510 [D] [scanner.go:66]  [11] 	// @Index
2019/11/14 18:51:39.510 [D] [scanner.go:83]  找到 @Index ：	// @Index
2019/11/14 18:51:39.510 [D] [scanner.go:66]  [12] 	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:51:39.510 [D] [scanner.go:83]  读取字段：	Age int16 `bson:"Age"` // 年龄
2019/11/14 18:51:39.510 [D] [scanner.go:66]  [13] }
2019/11/14 18:51:39.626 [I] [asm_amd64.s:1357]  http server Running on http://:10492
2019/11/14 18:51:51.206 [D] [server.go:2802]  |      127.0.0.1|[42m 200 [0m|    16.9543ms|   match|[46m POST    [0m /user/update   r:/user/update
